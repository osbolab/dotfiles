FUNCTION  Mode()
Called 189 times
Total time:   1.968788
 Self time:   1.968788

count  total (s)   self (s)
  189              1.956572     redraw
  189              0.003072     let l:mode = mode()
                                
  189              0.008334     if     mode ==# "n"  | exec 'hi User1 '.g:NeatStatusLine_color_normal  | return "N"
                                elseif mode ==# "i"  | exec 'hi User1 '.g:NeatStatusLine_color_insert  | return "I"
                                elseif mode ==# "R"  | exec 'hi User1 '.g:NeatStatusLine_color_replace | return "R"
                                elseif mode ==# "v"  | exec 'hi User1 '.g:NeatStatusLine_color_visual  | return "V"
                                elseif mode ==# "V"  | exec 'hi User1 '.g:NeatStatusLine_color_visual  | return "L"
                                elseif mode ==# "" | exec 'hi User1 '.g:NeatStatusLine_color_visual  | return "B"
                                else                 | return l:mode
                                endif

FUNCTION  <SNR>78_Highlight_Matching_Pair()
Called 61 times
Total time:   0.004275
 Self time:   0.004275

count  total (s)   self (s)
                              " Remove any previous match.
   61              0.000207   if exists('w:paren_hl_on') && w:paren_hl_on
    2              0.000006     silent! call matchdelete(3)
    2              0.000002     let w:paren_hl_on = 0
    2              0.000001   endif
                            
                              " Avoid that we remove the popup menu.
                              " Return when there are no colors (looks like the cursor jumps).
   61              0.000183   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
                                return
                              endif
                            
                              " Get the character under the cursor and check if it's in 'matchpairs'.
   61              0.000144   let c_lnum = line('.')
   61              0.000101   let c_col = col('.')
   61              0.000043   let before = 0
                            
   61              0.000129   let text = getline(c_lnum)
   61              0.000127   let c = text[c_col - 1]
   61              0.000712   let plist = split(&matchpairs, '.\zs[:,]')
   61              0.000153   let i = index(plist, c)
   61              0.000052   if i < 0
                                " not found, in Insert mode try character before the cursor
   59              0.000134     if c_col > 1 && (mode() == 'i' || mode() == 'R')
                                  let before = 1
                                  let c = text[c_col - 2]
                                  let i = index(plist, c)
                                endif
   59              0.000036     if i < 0
                                  " not found, nothing to do
   59              0.000042       return
                                endif
                              endif
                            
                              " Figure out the arguments for searchpairpos().
    2              0.000002   if i % 2 == 0
                                let s_flags = 'nW'
                                let c2 = plist[i + 1]
                              else
    2              0.000003     let s_flags = 'nbW'
    2              0.000002     let c2 = c
    2              0.000004     let c = plist[i - 1]
    2              0.000002   endif
    2              0.000002   if c == '['
    1              0.000000     let c = '\['
    1              0.000000     let c2 = '\]'
    1              0.000001   endif
                            
                              " Find the match.  When it was just before the cursor move it there for a
                              " moment.
    2              0.000001   if before > 0
                                let has_getcurpos = exists("*getcurpos")
                                if has_getcurpos
                                  " getcurpos() is more efficient but doesn't exist before 7.4.313.
                                  let save_cursor = getcurpos()
                                else
                                  let save_cursor = winsaveview()
                                endif
                                call cursor(c_lnum, c_col - before)
                              endif
                            
                              " Build an expression that detects whether the current cursor position is in
                              " certain syntax types (string, comment, etc.), for use as searchpairpos()'s
                              " skip argument.
                              " We match "escape" for special items, such as lispEscapeSpecial.
    2              0.000008   let s_skip = '!empty(filter(map(synstack(line("."), col(".")), ''synIDattr(v:val, "name")''), ' . '''v:val =~? "string\\|character\\|singlequote\\|escape\\|comment"''))'
                              " If executing the expression determines that the cursor is currently in
                              " one of the syntax types, then we want searchpairpos() to find the pair
                              " within those syntax types (i.e., not skip).  Otherwise, the cursor is
                              " outside of the syntax types and s_skip should keep its value so we skip any
                              " matching pair inside the syntax types.
    2              0.000409   execute 'if' s_skip '| let s_skip = 0 | endif'
                            
                              " Limit the search to lines visible in the window.
    2              0.000106   let stoplinebottom = line('w$')
    2              0.000003   let stoplinetop = line('w0')
    2              0.000002   if i % 2 == 0
                                let stopline = stoplinebottom
                              else
    2              0.000003     let stopline = stoplinetop
    2              0.000000   endif
                            
                              " Limit the search time to 300 msec to avoid a hang on very long lines.
                              " This fails when a timeout is not supported.
    2              0.000004   if mode() == 'i' || mode() == 'R'
                                let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
                              else
    2              0.000006     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
    2              0.000002   endif
    2              0.000002   try
    2              0.000340     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
    2              0.000003   catch /E118/
                                " Can't use the timeout, restrict the stopline a bit more to avoid taking
                                " a long time on closed folds and long lines.
                                " The "viewable" variables give a range in which we can scroll while
                                " keeping the cursor at the same position.
                                " adjustedScrolloff accounts for very large numbers of scrolloff.
                                let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
                                let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
                                let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
                                " one of these stoplines will be adjusted below, but the current values are
                                " minimal boundaries within the current window
                                if i % 2 == 0
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
                            	let stopline = min([bottom_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = min([bottom_viewable, c_lnum + 100])
                                  endif
                                  let stoplinebottom = stopline
                                else
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
                            	let stopline = max([top_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = max([top_viewable, c_lnum - 100])
                                  endif
                                  let stoplinetop = stopline
                                endif
                                let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
                              endtry
                            
    2              0.000002   if before > 0
                                if has_getcurpos
                                  call setpos('.', save_cursor)
                                else
                                  call winrestview(save_cursor)
                                endif
                              endif
                            
                              " If a match is found setup match highlighting.
    2              0.000004   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
    2              0.000004     if exists('*matchaddpos')
    2              0.000026       call matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10, 3)
    2              0.000002     else
                                  exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
                                endif
    2              0.000002     let w:paren_hl_on = 1
    2              0.000002   endif

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
  189   1.968788             Mode()
   61   0.004275             <SNR>78_Highlight_Matching_Pair()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
  189              1.968788  Mode()
   61              0.004275  <SNR>78_Highlight_Matching_Pair()

